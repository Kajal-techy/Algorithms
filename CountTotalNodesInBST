/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    int MAX = Integer.MIN_VALUE;
    public void getTotalNumberOfNodesInBinaryTree(TreeNode root) {
        
        System.out.println("Total Nodes = " + getTreeTotalNodes(root));
             
    }
    
    private int getTreeTotalNodes(TreeNode root) {
        
         if (root == null) {
                return 0;
        }
        
        int l = getTreeTotalNodes(root.left);
        int r = getTreeTotalNodes(root.right);
        
        System.out.println("Left = " + l);
        System.out.println("Right = " + r);
         
        return l + r + 1;
    }
}
